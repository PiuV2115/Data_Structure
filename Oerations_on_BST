// Online C++ compiler to run C++ program online
#include<iostream>
using namespace std;
class BST
{
	public:
	string post,name;
	int id,salary;
	BST *left;
	BST *right;
	BST(string x , int y, string z , int a)
	{
		name=x;
		id=y;
		post=z;
		salary=a;
		left=nullptr;
		right=nullptr;
	}
	friend void create();
	friend void display(BST *);
}*root,*temp;
void create()
{
root=nullptr;
BST *current;
string name1,post1;
int id1,salary1;
int choice;
	do
	{
		cout<<"# Name : ";
		cin>>name1;
		cout<<"# ID : ";
		cin>>id1;
		cout<<"# Post : ";
		cin>>post1;
		cout<<"# Salary : ";
		cin>>salary1;
		temp=new BST(name1,id1,post1,salary1);
		if(root==nullptr)
		{
			root=temp;
		}
		else
		{
		    current=root;
			while(current!=nullptr)
			{
			if(current->salary<temp->salary)
			{
				if(current->left==nullptr)
				{
					current->left=temp;
					break;
				}
				else
				{
					current=current->left;	
				}
			}
		    else
		     {
		     	if(current->right==nullptr)
		     	{
		     		current->right=temp;
		     		break;
		     	}
		     	else
		     	{
		     		root=root->right;
		     	}
		     }
		   }		
		}
		cout<<"Do You want To continue , Press 1 : ";
		cin>>choice;
	}while(choice==1);
}

void updating(BST *root,int salary)
{
        BST *temp;
        cout<<"Enter Updated Employee Information \n";
        cout<<"# Name : ";
		cin>>temp->name;
		cout<<"# ID : ";
		cin>>temp->id;
		cout<<"# Post : ";
		cin>>temp->post;
		cout<<"# Salary : ";
		cin>>temp->salary;
		while(root!=nullptr)
		{
		    if(root->salary<salary)
		    {
		        if(root->left==nullptr)
		        {
		            root->left=temp;
		            break;
		        }
		        else
		            root=root->left;
		    }
		    else
		    {
		        if(root->right==nullptr)
		        {
		            root->right=temp;
		            break;
		        }
		        else
		            root=root->right;
		    }
		}
}

void update()
{
    int tempid,tempsalary;
    cout<<"Enter Your current ID and salary: ";
    cin>>tempid>>tempsalary;
    if(root==nullptr)
    {
        cout<<"BST is not created Yet !";
    }
    BST *root1=root;
    while(root1!=nullptr)
    {
    if(root1->salary<tempsalary)
    {
    if(root1->left->salary==tempsalary)
    {
       updating(root1,tempsalary);
    }
    else
    {
        root1=root1->left;
    }
    }
    else
    {
    if(root1->right->salary==tempsalary)
    {
       updating(root1,tempsalary);
    }
    else
    {
        root1=root1->right;
    }
    }
    }
    if(root1==nullptr)
        cout<<"Employee data not Found ! ";
}



void display(BST *current)
{
	if(current==nullptr)
	{return;}
	cout<<"\n# Name : "<<current->name<<"\n# ID : "<<current->id<<"\n# Post : "<<current->post<<"\n# Salary : "<<current->salary;
	display(current->left);
	display(current->right);
}

int main()
{
	int ch;
	do{
	cout<<"\n1.Create \n2.Display \n3.Update\nEnter Your Choice : ";
	cin>>ch;
	switch(ch)
	{
		case 1: create();
		break;
		
		case 2: display(root);
		break;
		
		case 3: update();
		break;
		
		default:cout<<"Invalid Choice";
	}
	}while(ch!=4);
	return 0;
}
