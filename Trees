//Simple Binary Tree 
#include<iostream>
using namespace std;
class BT
{
  public:
	int data;
	BT *left;
	BT *right;
	BT(int x)
	{
		data=x;
		left=nullptr;
		right=nullptr;
	}
	friend void create();
	friend void insert(BT *,BT *);
	friend void display(BT *);
}*temp,*root;


void create()
{
root=nullptr;
int no,val;
cout<<"How Many nodes You want to create ";
cin>>no;
int i=0;
do{
	cout<<"Enter Data : ";
	cin>>val;
	
	temp=new BT(val);
	if(root==nullptr)
	{
		root=temp;
	}
	else
	{
	insert(temp,root);
	}
}while(i<no);
}

void insert(BT *temp,BT *root)
{
	char ch;
	cout<<"left or Right (L/R) :";
	cin>>ch;
	if(ch=='l'||ch=='L')
	{
	do{
		if(root->left==nullptr)
		{
			root->left=temp;
			break;
		}
		else
		{
			root=root->left;
		}
	}while(1);
	}
	else if (ch=='r'||ch=='R')
	{
	do{
		if(root->right==nullptr)
		{
			root->right=temp;
			break;
		}
		else
		{
			root=root->right;
		}
	}while(1);
	}
	else
	{
		cout<<"Invalid Choice ";
	}
}

void display(BT *root)
{
	cout<<root->data;
	display(root->left);
	display(root->right);	
}


int main()
{
int choice;
BT obj;
do{
cout<<"1.Create\n2.Insert\n3.Display\n4.Exit\nEnter Your Choice : ";
cin>>choice;
switch(choice)
{
	case 1: obj.create();
	break;
	
	case 2: obj.insert(temp,root);
	break;
	
	case 3: obj.display(root);
	break;
	
	case 4: exit(0);
	break;
	
	default : cout<<"Invalid Choice \n";
}
}while(1);

return 0;
}
